<div
  class="flex flex-col-reverse md:grid md:grid-cols-2 gap-6 py-16 px-4 sm:p-8 md:p-8 md:py-16"
>
  <div class="hidden md:flex justify-center items-center flex-col">
    <h2
      class="text-base sm:text-lg md:text-2xl font-bold text-primary text-center"
    >
      Forgot Your Password?
    </h2>
    <img
      src="images/recoveryImg.svg"
      alt="Sign-in image"
      class="h-[80%] lg:h-96"
    />
    <p
      class="text-xs sm:text-base md:text-lg text-secondary md:font-semibold mb-6 text-center"
    >
      Enter your username to receive a One-Time Password (OTP) and reset your
      account password securely.
    </p>
  </div>

  <div
    class="max-w-7xl mx-auto md:mx-5 my-auto p-8 rounded-lg shadow-lg bg-white bg-opacity-50 backdrop-blur-sm border border-gray-200"
  >
    <h1
      class="text-lg sm:text-xl md:text-2xl font-bold text-center md:mb-2 flex justify-center items-center gap-2"
    >
      <img src="images/logoImg/icon.png" class="h-10" alt="logo Img" />Password
      Reset
    </h1>
    <h2
      class="text-sm sm:text-base md:text-lg text-secondary md:font-semibold mb-6 text-center"
    >
      Please enter your username to receive the OTP.
    </h2>
    <form id="resetForm" class="space-y-6">
      <div class="h-16">
        <label for="username" class="block text-sm font-medium text-secondary"
          >Username</label
        >
        <input
          type="text"
          name="username"
          id="username"
          required
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-fourth focus:border-fourth sm:text-sm text-primary"
        />
        <p class="text-xs text-red-600 mt-1 hidden" id="usernameError"></p>
      </div>
      <div>
        <button
          type="submit"
          class="relative w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-gradient-to-r hover:from-blue-500 hover:to-purple-600 transition duration-300 hover:-translate-y-0.5"
        >
          Send OTP
          <span
            class="absolute inset-0 bg-blue-700 opacity-0 rounded-lg transition-opacity duration-300 hover:opacity-20"
          ></span>
        </button>
      </div>
    </form>
    <div class="text-xs md:text-sm text-center mt-4">
      <p>
        Don't have an account?
        <a href="/signup" class="text-blue-500">Sign Up</a>
      </p>
    </div>
  </div>
</div>

<script>
  const usernameRegex = /^[A-Za-z0-9_]+$/;

  const form = document.getElementById("resetForm");
  const usernameInput = document.getElementById("username");
  const usernameError = document.getElementById("usernameError");

  form.addEventListener("input", function (e) {
    if (usernameRegex.test(usernameInput.value)) {
      usernameError.classList.add("hidden");
    } else {
      usernameError.classList.remove("hidden");
      usernameError.innerText = "Invalid username";
    }
  });

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    if (!usernameRegex.test(usernameInput.value)) {
      usernameError.classList.remove("hidden");
      usernameError.innerText = "Invalid username";
      return;
    } else {
      usernameError.classList.add("hidden");
    }

    const url = `/auth/otpreset?username=${encodeURIComponent(
      usernameInput.value
    )}`;

    try {
      const res = await fetch(url, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });
      if (!res.ok) {
        const errorData = await res.json();
        throw new Error(errorData.error || "Failed to generate OTP");
      }
      const data = await res.json();

      Toastify({
        text: "OTP sent successfully. Please check your email.",
        duration: 4000,
        gravity: "top",
        position: "right",
        backgroundColor: "linear-gradient(to right, #4caf50, #2e7d32)",
        stopOnFocus: true,
        close: true,
        style: {
          borderRadius: "10px",
          boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
          fontSize: "15px",
          padding: "14px 18px",
          fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
          color: "#fff",
        },
      }).showToast();

      setTimeout(() => {
        window.location.href = data.redirect;
      }, 2000);

    } catch (error) {
      Toastify({
        text: "Error sending OTP ",
        duration: 4000,
        gravity: "top",
        position: "right",
        backgroundColor: "linear-gradient(to right, #e52d27, #b31217)",
        stopOnFocus: true,
        close: true,
        style: {
          borderRadius: "10px",
          boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
          fontSize: "15px",
          padding: "14px 18px",
          fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
          color: "#fff",
        },
      }).showToast();
    }
    
      
  });
</script>
