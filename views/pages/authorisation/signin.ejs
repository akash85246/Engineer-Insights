<div
  class="flex flex-col-reverse md:grid md:grid-cols-2 gap-6 py-16 px-4 sm:p-8 md:p-8 md:py-16"
>
  <div class="hidden md:flex justify-center items-center flex-col">
    <h2
      class="text-base sm:text-lg md:text-2xl font-bold text-primary text-center -mb-10"
    >
      Welcome Back!
    </h2>
    <img src="images/signinImg.svg" alt="Sign-in image" class="h-[80%]" />
    <p
      class="text-xs sm:text-base md:text-lg text-secondary md: font-semibold -mt-12 text-center"
    >
      Unlock a world of opportunities and insightsâ€”log in to join a dynamic
      network of industry trailblazers and thought leaders who are redefining
      the future of technology and innovation.
    </p>
  </div>

  <div
    class="max-w-7xl md:mx-5 my-auto p-8 rounded-lg shadow-lg bg-white bg-opacity-50 backdrop-blur-sm border border-gray-200"
  >
    <h1
      class="text-lg sm:text-xl md:text-2xl font-bold text-center md:mb-2 flex justify-center items-center gap-2 text-primary"
    >
      <img
        src="images/logoImg/icon.png "
        class="h-10 rounded-md"
        alt="logo Img"
      />Sign In
    </h1>
    <h2
      class="text-sm sm:text-base md:text-lg text-secondary md:font-semibold mb-6 text-center"
    >
      Please enter your details to sign in.
    </h2>
    <form id="signinForm" class="space-y-6">
      <div class="h-16">
        <label for="username" class="block text-sm font-medium text-secondary"
          >Username</label
        >
        <input
          type="text"
          name="username"
          id="username"
          required
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-fourth focus:border-fourth sm:text-sm text-primary"
        />
        <p class="text-xs text-red-800 mt-1 hidden" id="usernameError"></p>
      </div>
      <div class="h-16">
        <label for="password" class="block text-sm font-medium text-secondary"
          >Password</label
        >
        <input
          type="password"
          name="password"
          id="password"
          required
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-fourth focus:border-fourth sm:text-sm text-primary"
        />
        <p class="mt-1 text-xs text-red-800 hidden" id="passwordError"></p>
      </div>
      <div>
        <button
          type="submit"
          class="w-full bg-blue-600 hover:bg-gradient-to-r hover:from-blue-500 hover:to-purple-600 text-white py-2 px-4 rounded-md hover:bg-blue-600 hover:shadow-lg transition-all duration-300 focus:outline-none relative hover:-translate-y-0.5"
        >
          Sign In
          <span
            class="absolute inset-0 bg-blue-700 opacity-0 rounded-lg transition-opacity duration-300 hover:opacity-20"
          ></span>
        </button>
      </div>
    </form>

    <div class="justify-between flex">
      <div class="flex justify-center items-center gap-1 text-xs md:text-sm">
        <input type="checkbox" name="showPassword" id="showPassword" />
        <label for="showPassword"> Show Password</label>
      </div>
      <div class="text-xs md:text-sm mt-2">
        <a href="/recovery" class="text-blue-600">Forgot Password?</a>
      </div>
    </div>
    <div class="flex items-center justify-center space-x-4 my-6">
      <div class="flex-grow h-px bg-gray-300"></div>
      <p class="text-gray-500 font-semibold text-sm">OR</p>
      <div class="flex-grow h-px bg-gray-300"></div>
    </div>
    <a
      href="/auth/google"
      class="flex items-center justify-center w-full px-5 py-3 bg-gray-100 hover:text-gray-900 shadow-inner hover:bg-gradient-to-r hover:bg-gray-200 rounded-lg hover:shadow-xl hover:-translate-y-0.5 transition-transform duration-300 ease-in-out focus:outline-none relative"
    >
      <img
        src="images/icons/googleIcon.svg"
        alt="Google icon"
        class="w-5 h-5 mr-3"
      />
      <span class="text-gray-700 font-semibold text-base"
        >Sign in with Google</span
      >
      <span
        class="absolute inset-0 opacity-0 rounded-lg transition-opacity duration-300 hover:opacity-20 bg-gray-300"
      ></span>
    </a>

    <div class="text-xs md:text-sm text-center mt-4">
      <p class="text-primary">
        Don't have an account?
        <a href="/signup" class="text-blue-600">Sign Up</a>
      </p>
    </div>
  </div>
</div>

<script>
  const regex = {
    username: /^[A-Za-z0-9_]+$/,
    password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/,
  };

  function showError(input, message) {
    const errorElement = document.getElementById(`${input.id}Error`);
    input.classList.add("error");
    errorElement.textContent = message;
    errorElement.classList.remove("hidden");
  }

  function clearError(input) {
    const errorElement = document.getElementById(`${input.id}Error`);
    input.classList.remove("error");
    errorElement.textContent = "";
    errorElement.classList.add("hidden");
  }

  document.getElementById("signinForm").addEventListener("input", function (e) {
    const input = e.target;

    switch (input.id) {
      case "username":
        if (!regex.username.test(input.value)) {
          showError(input, "Invalid Username.");
        } else {
          clearError(input);
        }
        break;
      case "password":
        if (!regex.password.test(input.value)) {
          showError(input, "Invalid Password.");
        } else {
          clearError(input);
        }
        break;
    }
  });

  document
    .getElementById("showPassword")
    .addEventListener("change", function () {
      var passwordField = document.getElementById("password");
      if (this.checked) {
        passwordField.type = "text";
      } else {
        passwordField.type = "password";
      }
    });

  document
    .getElementById("signinForm")
    .addEventListener("submit", async function (e) {
      e.preventDefault();

      const username = document.getElementById("username");
      const password = document.getElementById("password");

      // Validate again before sending
      if (!regex.username.test(username.value)) {
        showError(username, "Invalid Username.");
        return;
      } else {
        clearError(username);
      }

      if (!regex.password.test(password.value)) {
        showError(password, "Invalid Password.");
        return;
      } else {
        clearError(password);
      }

      const data = {
        username: username.value,
        password: password.value,
      };

      try {
        const response = await fetch("/auth/login", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (result.twoFactor) {
          window.location.href = result.redirect;
        } else if (result.success) {
          window.location.href = result.redirect;
        } else {
          throw new Error("Login failed");
        }
        Toastify({
          text: "Login successful!",
          duration: 4000,
          gravity: "top",
          position: "right",
          backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
          close: true,
        }).showToast();

        setTimeout(() => {
          window.location.href = result.redirect;
        }, 1000);
      } catch (error) {
        Toastify({
          text: "Something went wrong",
          duration: 4000,
          gravity: "top",
          position: "right",
          backgroundColor: "linear-gradient(to right, #e52d27, #b31217)",
          close: true,
        }).showToast();
      }
    });
</script>
