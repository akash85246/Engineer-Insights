<div class="relative w-full group">
    <h3 class="text-sm md:text-base lg:text-lg font-semibold  <%= profile.settings.theme === 'dark' ? ' text-dark-secondary' : 'text-white' %> mb-2">Similar Authors</h3>
  
    <div
      class="carousel overflow-x-auto whitespace-nowrap scroll-smooth relative rounded-md overflow-y-hidden"
      id="carouselAuthorSlidesContainer"
    >
      <div
        class="slides flex transition-transform duration-500 ease-out"
        id="carouselAuthorSlides"
      >
      </div>
    </div>
  </div>
  
  <script>
    window.onload = () => {
      const tags = "<%= profile.tags.join(',') %>" || "";
      fetch(`/api/profile/search?tags=${tags}`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((res) => {
          if (!res.ok) {
            throw new Error(`HTTP error! status: ${res.status}`);
          }
          return res.json();
        })
        .then((data) => {
          const carouselAuthorSlides = document.getElementById("carouselAuthorSlides");
          const carouselAuthorContainer = document.getElementById("carouselAuthorSlidesContainer");
  
        
  
          carouselAuthorSlides.innerHTML = "";
  
          
          data.forEach((user) => {
            const profileDiv = document.createElement("div");
            profileDiv.className = "profile text-center mr-2 md:mr-4 flex-shrink-0";
  
            profileDiv.innerHTML = `
              <a href="/profile/${user.slug}" class="relative w-full h-full flex flex-col items-center font-roboto cursor-pointer">
                <img src="${user.avatar || '/images/defaultProfile.png'}" alt="${user.username}" class="w-16 h-16 rounded-full object-cover mb-2" />
                <span class="block text-sm font-semibold  <%= profile.settings.theme === 'dark' ? 'text-fourth' : 'text-fifth' %>">${user.username}</span>
              </a>
            `;
            carouselAuthorSlides.appendChild(profileDiv);
          });
  
          let currentIndex = 0;
          const totalSlides = data.length;
          const slideWidth = carouselAuthorSlides.querySelector(".profile").offsetWidth;
  
          function autoScroll() {
            currentIndex = (currentIndex + 1) % totalSlides;
            const scrollLeftValue = currentIndex * slideWidth;
  
            if (currentIndex === 0) {
              carouselAuthorContainer.scrollTo({ left: 0, behavior: 'smooth' });
            } else {
              carouselAuthorContainer.scrollTo({ left: scrollLeftValue, behavior: 'smooth' });
            }
          }
  
          const scrollInterval = setInterval(autoScroll, 3000);
  
          carouselAuthorContainer.addEventListener("scroll", () => {
            const currentScrollLeft = carouselAuthorContainer.scrollLeft;
            currentIndex = Math.round(currentScrollLeft / slideWidth);
          });
        })
        .catch((error) => {
          // console.error("Error fetching similar authors:", error);
          const profileList = document.getElementById("carouselAuthorSlides");
          const errorDiv = document.createElement("div");
          errorDiv.className = "text-red-500";
          errorDiv.innerHTML = "No Similar Profiles Found";
          profileList.appendChild(errorDiv);
        });
    };
  </script>