<h1
  class="text-lg md:text-xl lg:text-2xl <%= user.settings.theme === 'dark' ? ' text-dark-text' : ' text-tertiary' %> font-semibold py-1 px-2 md:py-2 md:px-5 lg:px-10 lg:py-5 font-lora mt-8 mb-2 md:mb-4"
>
  Blogs from Your Favorite Authors
</h1>

<div class="relative group mx-2 md:mx-5 lg:mx-10">
  <button
    class="absolute h-full left-0 top-1/2 transform -translate-y-1/2 <%= user.settings.theme === 'dark' ? 'bg-dark-secondary text-dark-text' : 'bg-secondary text-text' %> bg-opacity-20 px-4 py-2 hidden group-hover:block"
    id="prev"
  >
    &#10094;
  </button>

  <div
    id="blogsByFavouriteAuthors"
    class="flex overflow-x-scroll scroll-smooth gap-2 md:gap-2 flex-1 w-full"
  ></div>

  <button
    class="absolute h-full right-0 top-1/2 transform -translate-y-1/2 <%= user.settings.theme === 'dark' ? 'bg-dark-secondary text-dark-text' : 'bg-secondary text-text' %> bg-opacity-20 px-4 py-2 hidden group-hover:block"
    id="next"
  >
    &#10095;
  </button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const carouselContainer = document.getElementById(
      "blogsByFavouriteAuthors"
    );


      window.openAuthorBlogMore = function openAuthorBlogMore(isSubAuthor, isAuthor, slug) {
      const blogMoreOptions = document.getElementById(
        "blogAuthorMoreOptions-" + slug
      );
      console.log(blogMoreOptions)
     
      blogMoreOptions.classList.toggle("hidden");
    };

    window.hideAuthorBlogOptions = function hideAuthorBlogOptions(slug) {
      const options = document.getElementById(`blogAuthorMoreOptions-${slug}`);
      if (options) {
        options.classList.add("hidden");
      }
    };

     window.likeAuthorBlog = async function likeAuthorBlog(slug, isLiked) {
      const likeImg = document.getElementById("likeAuthorIcon-" + slug);
      const likeText = document.getElementById("likeAuthorText-" + slug);
      isLiked = likeText.innerText === "Unlike";
      
      if (isLiked) {
        likeImg.src = "images/icons/unlikeIcon.svg";
        likeText.innerText = "Like";
        likeImg.alt = "Unlike icon";
        
      } else {
        likeImg.src = "images/icons/likeIcon.svg";
        likeText.innerText = "Unlike";
        likeImg.alt = "Like icon";
        
      }
      try {
        const response = await fetch(`/api/blog/like/${slug}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
        });

        const result = await response.json();
       
        if (!result.liked) {
          likeImg.src = "images/icons/unlikeIcon.svg";
          likeImg.alt = "Unlike icon";
          likeText.innerText = "Like";
           Toastify({
              text: "Blog unliked successfully!",
              duration: 4000,
              gravity: "top",
              position: "right",
              backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)", 
              stopOnFocus: true,
              close: true,
              style: {
                borderRadius: "10px",
                boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                fontSize: "15px",
                padding: "14px 18px",
                fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                color: "#fff" }
            }).showToast();
          
        } else {
          likeImg.src = "images/icons/likeIcon.svg";
          likeImg.alt = "Like icon";
          likeText.innerText = "Unlike";
          Toastify({
              text: "Blog liked successfully!",
              duration: 4000,
              gravity: "top",
              position: "right",
              backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)", 
              stopOnFocus: true,
              close: true,
              style: {
                borderRadius: "10px",
                boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                fontSize: "15px",
                padding: "14px 18px",
                fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                color: "#fff"
              }
            }).showToast();
        }
      } catch (error) {
        likeImg.src = isLiked
          ? "images/icons/likeIcon.svg"
          : "images/icons/unlikeIcon.svg";
        likeImg.alt = isLiked ? "Like icon" : "Unlike icon";
        likeText.innerText = isLiked ? "Like" : "Unlike";
         Toastify({
              text: "Please try again later.",
              duration: 4000,
              gravity: "top",
              position: "right",
              backgroundColor: "linear-gradient(to right, #e52d27, #b31217)",
              stopOnFocus: true,
              close: true,
              style: {
                borderRadius: "10px",
                boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                fontSize: "15px",
                padding: "14px 18px",
                fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                color: "#fff"
              }
            }).showToast();
      }
    };
    
    window.toggleAuthorSaveBlog = async function toggleAuthorSaveBlog(slug,isBookmarked) {
      try {
        const saveText = document.getElementById(`saveAuthorText-${slug}`);
        const saveIcon = document.getElementById(`saveAuthorIcon-${slug}`);

        if(isBookmarked) {
          saveText.innerText = "Save";
          saveIcon.src = "images/icons/bookMark.svg";
        } else {
          saveText.innerText = "Unsave";
          saveIcon.src = "images/icons/unbookMark.svg";
        }

        const response = await fetch(`/api/blog/saveBlog/${slug}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
          });

            if (!response.ok) {

              saveText.innerText = isBookmarked ? "Unsave" : "Save";
              saveIcon.src = isBookmarked
                ? "images/icons/bookMark.svg"
                : "images/icons/unbookMark.svg";

              throw new Error("Failed to archive the blog");
            }

            const result = await response.json();

            if(!result.saved) {
                saveText.innerText = "Save";
                saveIcon.src = "images/icons/bookMark.svg";

                 Toastify({
                text: "Blog unsaved successfully!",
                duration: 4000,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)", 
                stopOnFocus: true,
                close: true,
                style: {
                  borderRadius: "10px",
                  boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                  fontSize: "15px",
                  padding: "14px 18px",
                  fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                  color: "#fff"
                }
              }).showToast();
              } else {
                saveText.innerText = "Unsave";
                saveIcon.src = "images/icons/unbookMark.svg";

                 Toastify({
                text: "Blog saved successfully!",
                duration: 4000,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #00c6ff, #0072ff)", // Aqua to vibrant blue
                stopOnFocus: true,
                close: true,
                style: {
                  borderRadius: "10px",
                  boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                  fontSize: "15px",
                  padding: "14px 18px",
                  fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                  color: "#fff"
                }
              }).showToast();
              }
            
      } catch (error) {
         Toastify({
              text: "Failed to save/unsave the blog. Please try again later.",
              duration: 4000,
              gravity: "top",
              position: "right",
              backgroundColor: "linear-gradient(to right, #e52d27, #b31217)",
              stopOnFocus: true,
              close: true,
              style: {
                borderRadius: "10px",
                boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                fontSize: "15px",
                padding: "14px 18px",
                fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                color: "#fff"
              }
            }).showToast();
      }
    };

     window.toggleAuthorArchiveBlog = async function toggleAuthorArchiveBlog(slug) {
      
      const archiveText = document.getElementById(`archiveAuthorText-${slug}`);
      const archiveIcon = document.getElementById(`archiveAuthorIcon-${slug}`);
      const isArchived = archiveText.dataset.isarchived === "true"; 

      archiveText.dataset.isarchived = (archiveText.dataset.isarchived === "true") ? "false" : "true";

      if (isArchived) {
        console.log("isArchived",isArchived);
        archiveText.innerText = "Archive";
        archiveIcon.src = "images/icons/archiveIcon.svg";
      } else {
        archiveText.innerText = "Unarchive";
        archiveIcon.src = "images/icons/unarchiveIcon.svg";
      }

      try {
        const response = await fetch(`/api/blog/archive/${slug}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
          });

            if (!response.ok) {
              archiveText.innerText = isArchived ? "Unarchive" : "Archive";
              archiveIcon.src = isArchived
                ? "images/icons/unarchiveIcon.svg"
                : "images/icons/archiveIcon.svg";
              throw new Error("Failed to archive the blog");
            }

            const result = await response.json();
             console.log("Blog unarchived successfully", result);
            if(!result.archived) {
              archiveText.innerText = "Archive";
              archiveIcon.src = "images/icons/archiveIcon.svg";
               Toastify({
                  text: "Blog published successfully!",
                  duration: 4000,
                  gravity: "top",
                  position: "right",
                  backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)", 
                  stopOnFocus: true,
                  close: true,
                  style: {
                    borderRadius: "10px",
                    boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                    fontSize: "15px",
                    padding: "14px 18px",
                    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                    color: "#fff"
                  }
                }).showToast();
            } else {
              archiveText.innerText = "Unarchive";
              archiveIcon.src = "images/icons/unarchiveIcon.svg";
              Toastify({
                  text: "Blog archived successfully!",
                  duration: 4000,
                  gravity: "top",
                  position: "right",
                  backgroundColor: "linear-gradient(to right, #1e3c72, #2a5298)", 
                  stopOnFocus: true,
                  close: true,
                  style: {
                    borderRadius: "10px",
                    boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                    fontSize: "15px",
                    padding: "14px 18px",
                    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                    color: "#fff"
                  }
                }).showToast();
              // fetchBlogs(1); 
            }
      } catch (error) {
        Toastify({
                text: "Failed to archive the blog. Please try again later.",
                duration: 4000,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #e52d27, #b31217)",
                stopOnFocus: true,
                close: true,
                style: {
                  borderRadius: "10px",
                  boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
                  fontSize: "15px",
                  padding: "14px 18px",
                  fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                  color: "#fff"
                }
              }).showToast();
      }
    };



    function fetchBlogs() {
      let blogs = <%- JSON.stringify(authorBlog) %>;

      if (blogs.length > 0) {
        const slidesHtml = blogs
          .map(
            (blog) =>{ 
              let isSubAuthor = false;
                let isAuthor = false;
                let userId = null;
                let isLiked = false;
                let isBookmarked = false;
                let isArchived = false;
          
                const isAuthenticated = "<%- isAuthenticated %>" == "true";
          
                if (isAuthenticated) {
            
                  const userId = "<%- user._id %>"; 
                  const user = <%- JSON.stringify(user) %>;
                  isAuthor = userId.toString() == blog.author._id;
                  isSubAuthor = blog.subauthors.some(
                    (subauthorId) => subauthorId.toString() === userId.toString());

                  if (blog.likes && blog.likes.length > 0) {
                    isLiked = blog.likes.some((like) => like.toString()       ===    userId.toString());
            
                  }

                  if(user.savedBlogs && user.savedBlogs.length >0){
                    isBookmarked = user.savedBlogs.some((save) => save.       toString() === blog._id.toString());
                  }

                  isArchived = blog.status === "archived";
                }

            return  `
            <div class="max-w-[250px] sm:min-w-[50%] md:min-w-[30%] lg:min-w-[25%] flex-shrink-0 font-lora flex-1 min-h-full  flex-grow " onmouseleave="hideAuthorBlogOptions('${blog.slug}')">
                    <div class="flex justify-evenly items-center bg-no-repeat bg-cover text-white rounded-md h-full" style="background-image: url('${
                      blog.blogPhoto
                    }')">
                      <div class="rounded-lg shadow-lg overflow-hidden w-full  p-3 h-full flex flex-col justify-between <%= user.settings.theme === 'dark' ? 'bg-black bg-opacity-30' : '' %>">
                        <div class="flex justify-end">
                          <p class="px-2 py-1 rounded-lg <%= user.settings.theme === 'dark' ? 'bg-dark-fourth text-dark-primary ' : 'bg-background text-background'  %>  bg-opacity-30  text-xxs sm:text-xs md:text-xxs lg:text-xs  font-semibold font-roboto uppercase">${truncateText(
                            blog.tags[0],
                            15
                          )}</p>
                        </div>
                        <div class="flex flex-col gap-2">
                          <div class="h-10 sm:h-20 md:h-18 lg:h-28"></div>
                          <p class="text-xs sm:text-xxs md:text-xs lg:text-sm  font-thin <%= user.settings.theme === 'dark' ? ' text-dark-primary' : 'text-sixth' %>">${new Date(
                            blog.createdAt
                          ).toLocaleDateString("en-US", {
                            day: "numeric",
                            month: "numeric",
                            year: "numeric",
                          })}</p>
                          <h5 class="text-sm sm:text-sm md:text-base lg:text-lg  font-semibold overflow-clip whitespace-normal overflow-hidden <%= user.settings.theme === 'dark' ? 'text-dark-primary ' : 'text-background'  %>">${truncateText(
                            blog.title,
                            50
                          )}</h5>
                          <p class="<%= user.settings.theme === 'dark' ? ' text-dark-primary' : 'text-sixth' %>  text-xs sm:text-xxs md:text-xs lg:text-sm  break-words whitespace-normal overflow-hidden font-thin">${truncateText(
                            blog.description,
                            100
                          )}
                        <span><a href="/blog/${
                          blog.slug
                        }" class=" <%= user.settings.theme === 'dark' ? ' text-dark-primary' : 'text-fifth' %> hover:text-highlight  text-center font-medium">read more</a></span>
                      </p>
                      <div class="justify-between items-center flex text-sm sm:text-sm md:text-base lg:text-base">
          
                        <a class="flex items-center gap-2" href="/profile/${
                          blog.author.slug
                        }" >
                          <img
                            src="${blog.author.avatar}"
                            alt="${blog.author.firstname}'s avatar"
                            class="w-8 h-8 lg:w-10 lg:h-10 rounded-md"
                          />
                          <div>
                            <h3 class=" font-semibold <%= user.settings.theme ===               'dark' ? ' text-dark-primary' : 'text-background' %>">
                              ${blog.author.username}
                            </h3>
                            <p class="text-xs sm:text-xs md:text-sm lg:text-sm  <%= user.settings.theme === 'dark' ? '              text-dark-secondary' : 'text-sixth' %> ">
                              ${blog.author.firstname} ${blog.author.lastname}
                            </p>
                          </div>
                        </a>
                    

                     <div class="relative">
                             ${(isAuthenticated)?
                  `<button onclick='openAuthorBlogMore(${isSubAuthor}, ${isAuthor}, "${
                        blog.slug
                    }")'>
                      <img src="images/icons/verticalMoreIcon.svg" alt="More"
                        class="w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 lg:w-7 lg:h-7 ">
                    </button>`:""}

                            <div  class="absolute bottom-0 right-0 flex flex-col gap-2 rounded-md p-2 shadow-md z-50
                      <%= user.settings.theme === 'dark' ? 'bg-dark-fifth text-dark-text' : 'bg-background text-primary' %> min-w-[120px] hidden shadow-md"
                      id="blogAuthorMoreOptions-${blog.slug}">

                       

                  ${
                    isSubAuthor || isAuthor
                      ? `
                      
                         ${
                           isAuthor
                             ? `
                             <button onclick="toggleAuthorArchiveBlog('${blog.slug}','${isArchived}')"   class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
                             <%= user.settings.theme === 'dark'
                              ? 'hover:bg-red-600 text-dark-primary'
                              : 'hover:bg-red-200 text-primary' %>">
                             <img src="${isArchived?"images/icons/unarchiveIcon.svg":"images/icons/archiveIcon.svg"}" alt="Archive Blog"
                       class="w-4 h-4 transition-transform duration-200 group-hover:scale-110 " id="archiveAuthorIcon-${blog.slug}">
                             <span id="archiveAuthorText-${blog.slug}">${isArchived ? "Unarchive" : "Archive"}</span>
                             </button>

                             <button onclick="openDeleteModal('${blog.slug}')"  class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
                            <%= user.settings.theme === 'dark'
                              ? 'hover:bg-red-600 text-dark-primary'
                              : 'hover:bg-red-200 text-primary' %>">
                              <img src="images/icons/deleteDarkIcon.svg" alt="Delete Blog"
                              class="w-4 h-4 transition-transform duration-200 group-hover:scale-110 ">
                              <span>Delete</span>
                              </button>
                             `
                             : ""
                         }
                         <a href="/blog/edit/${
                           blog.slug
                         }"  class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
                          <%= user.settings.theme === 'dark'
                            ? 'hover:bg-blue-600 text-dark-primary'
                            : 'hover:bg-blue-200 text-primary' %>"> <img src="images/icons/editDarkIcon.svg" alt="Edit Blog"
                        class="w-4 h-4 transition-transform duration-200 group-hover:scale-110"> 
                         <span>Edit</span>
                         </a>
                      
                    `
                      : ` <button onclick="likeAuthorBlog('${
                        blog.slug
                      }',${isLiked})" class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
                        <%= user.settings.theme === 'dark'
                          ? 'hover:bg-red-600 text-dark-primary'
                          : 'hover:bg-red-200 text-primary' %>">
                              <img src="${
                                isLiked
                                  ? "images/icons/likeIcon.svg"
                                  : "images/icons/unlikeIcon.svg"
                              }" id="likeAuthorIcon-${blog.slug}" alt="Like Blog"
                        class="w-4 h-4 transition-transform duration-200 group-hover:scale-110  ">
                              <span id="likeAuthorText-${blog.slug}">${
                              isLiked ? "Unlike" : "Like"
                            }</span>
                        </button>

                        <button onclick="toggleAuthorSaveBlog('${blog.slug}',${isBookmarked})"   class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
                          <%= user.settings.theme === 'dark'
                          ? 'hover:bg-red-600 text-dark-primary'
                          : 'hover:bg-red-200 text-primary' %>">
                              <img src="${
                                isBookmarked
                                  ? "images/icons/unbookMark.svg"
                                  : "images/icons/bookMark.svg" } " alt="Unsave Blog"
                        class="w-4 h-4 transition-transform duration-200 group-hover:scale-110 " id="saveAuthorIcon-${blog.slug}">
                              <span id="saveAuthorText-${blog.slug}">${isBookmarked?`Unsave`:`Save`}</span>
                        </button>`
                  }
                </div>
                 </div>

                          
                        </div>
                      </div>
                    </div>
                  </div>
                  `
      })
          .join("");

        carouselContainer.innerHTML = slidesHtml;
      } else {
        document.getElementById("favoriteAuthorsBlog").style.display = "none";
      }
    }

    fetchBlogs();

    const next = document.getElementById("next");
    const prev = document.getElementById("prev");

    next.addEventListener("click", () => {
      carouselContainer.scrollBy({
        left: carouselContainer.clientWidth,
        behavior: "smooth",
      });
    });

    prev.addEventListener("click", () => {
      carouselContainer.scrollBy({
        left: -carouselContainer.clientWidth,
        behavior: "smooth",
      });
    });

    function truncateText(text, maxLength) {
      if (text.length > maxLength) {
        return text.substring(0, maxLength) + "...";
      }
      return text;
    }
  });
</script>
