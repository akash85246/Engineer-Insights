<nav
  id="navbar"
  class="bg-opacity-20 shadow-lg fixed w-full z-50 transition-transform duration-300  <%= user.settings.theme === 'dark' ? 'bg-dark-primary text-dark-text' : 'bg-primary text-text' %>"
>
  <div class="max-w-4xl lg:max-w-7xl mx-auto px-4">
    <div class="flex justify-between items-center">
      <div class="flex font-roboto">
        <a href="/" class="flex items-center space-x-2 mr-2 group">
          <img
            src="images/logoImg/logo.png"
            alt="Logo"
            class="h-8 w-8 rounded-lg shadow-lg"
          />
          <span
            class="text-lg font-semibold tracking-wide bg-gradient-to-r from-[#393E46] to-[#00ADB5] text-transparent bg-clip-text transition-all duration-300 group-hover:from-[#00ADB5] group-hover:to-[#393E46] font-montserrat sm:block hidden"
          >
            Engineer Insights
          </span>
        </a>
        <div class="hidden md:flex items-center space-x-1">
          <a
            href="/blog/all"
            class="py-2 px-2 text-white hover:text-highlight transition duration-300 md:text-sm lg:text-base"
            >Explore</a
          >
        </div>
      </div>

      <div class="flex items-center gap-4 md:gap-2 my-2">
        <div class="flex items-center space-x-4 md:space-x-3">
          <div
            class="relative flex flex-col items-start bg-white border border-gray-300 rounded-md px-4 py-2 shadow-sm w-40 lg:w-96 md:w-60 sm:block hidden"
          >
            <div class="flex items-center w-full">
              <img
                src="images/icons/searchIcon.png"
                alt="Search Icon"
                class="w-5 h-5"
              />
              <input
                type="text"
                placeholder="Search"
                class="p-0 m-0 ml-2 bg-transparent outline-none text-tertiary w-full placeholder-gray-500 text-sm md:text-xs lg:text-sm font-lora"
                id="searchInput"
                maxlength="50"
              />
            </div>

            <div
              id="searchResults"
              class="absolute top-full mt-2 left-0 w-full bg-white border border-gray-300 shadow-md rounded-lg hidden"
            >
              <div id="userResults"></div>
              <div id="blogResults"></div>
            </div>
          </div>

          <div
            class="auth-links flex items-center gap-1 m-0 md:mx-auto my-2"
          ></div>
        </div>
        <div class="flex items-center space-x-2">
          <!-- Sign In Button -->
          <a
            href="/signin"
            class="relative px-5 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg shadow-inner hover:bg-gradient-to-r  hover:text-gray-900 hover:bg-gray-200 transition-all duration-300 focus:outline-none"
          >
            Sign In
            <span
              class="absolute inset-0 rounded-lg border-2 border-transparent hover:border-gray-300 transition-all duration-300"
            ></span>
          </a>

          <!-- Sign Up Button -->
          <a
            href="/signup"
            class="relative px-5 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg shadow-md hover:bg-gradient-to-r hover:from-blue-500 hover:to-purple-600 hover:shadow-lg transition-all duration-300 focus:outline-none "
          >
            Sign Up
            <span
              class="absolute inset-0 bg-blue-700 opacity-0 rounded-lg transition-opacity duration-300 hover:opacity-20"
            ></span>
          </a>
        </div>
      </div>
    </div>
  </div>
</nav>

<div><%- include("../partials/newBlogPopout.ejs") %></div>

<script>
  let lastScrollTop = 0;
  const navbar = document.getElementById("navbar");

  window.addEventListener("scroll", function () {
    let scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    if (scrollTop > lastScrollTop) {
      navbar.style.transform = "translateY(-100%)";
    } else {
      navbar.style.transform = "translateY(0)";
    }

    lastScrollTop = scrollTop;
  });

  const searchInput = document.getElementById("searchInput");
  const searchResults = document.getElementById("searchResults");
  const blogResults = document.getElementById("blogResults");
  const userResults = document.getElementById("userResults");

  async function fetchBlogs(searchValue) {
    try {
      const res = await fetch(
        `/api/blog/search?title=${searchValue}&limit=5&page=1`
      );
      const data = await res.json();

      blogResults.innerHTML = "";

      if (data.blogs?.length > 0) {
        data.blogs.forEach((blog) => {
          const resultItem = createResultItem({
            imageSrc: blog.blogPhoto ? `${blog.blogPhoto}` : "defaultImage.jpg",
            altText: blog.title,
            title: blog.title,
            subtitle: blog.readingTime,
            clickHandler: () => {
              console.log(`Selected Blog: ${blog.title}`);
              window.location.href = `/blog/${blog.slug}`;
            },
          });
          blogResults.appendChild(resultItem);
        });
      }
    } catch (error) {
      console.error("Error fetching blogs:", error);
    }
  }

  async function fetchUsers(searchValue) {
    try {
      const res = await fetch(
        `/api/profile/search?username=${searchValue}&limit=5&page=1`
      );
      const data = await res.json();
      console.log(data);
      userResults.innerHTML = "";

      if (data.length > 0) {
        data.forEach((user) => {
          const resultItem = createResultItem({
            imageSrc: user.avatar
              ? `${user.avatar}`
              : "./images/defaultProfile.png",
            altText: `${user.firstname} ${user.lastname}` || user.username,
            title: user.username,
            subtitle: user.bio
              ? user.bio.slice(0, 50) + "..."
              : "No bio available",
            clickHandler: () => {
              console.log(`Selected User: ${user.username}`);
              window.location.href = `/profile/${user.slug}`;
            },
          });
          userResults.appendChild(resultItem);
        });
      }
    } catch (error) {
      console.error("Error fetching users:", error);
    }
  }

  function createResultItem({
    imageSrc,
    altText,
    title,
    subtitle,
    clickHandler,
  }) {
    const resultItem = document.createElement("div");
    resultItem.className =
      "px-4 py-2 hover:bg-gray-100 cursor-pointer text-sm text-gray-700 flex items-center gap-3";

    const img = document.createElement("img");
    img.src = imageSrc;
    img.alt = altText;
    img.className = "w-8 h-8 rounded-full";

    const info = document.createElement("div");
    info.className =
      "flex flex-col w-full overflow-hidden object-contain box-border";

    const titleElement = document.createElement("p");
    titleElement.textContent = title;
    titleElement.className = "font-medium overflow-hidden whitespace-nowrap";

    info.appendChild(titleElement);

    if (subtitle) {
      const subtitleElement = document.createElement("span");
      subtitleElement.textContent = subtitle;
      subtitleElement.className =
        "text-gray-500 text-xs overflow-hidden whitespace-nowrap";
      info.appendChild(subtitleElement);
    }

    resultItem.appendChild(img);
    resultItem.appendChild(info);
    resultItem.addEventListener("click", clickHandler);

    return resultItem;
  }

  searchInput.addEventListener("input", (e) => {
    const searchValue = e.target.value.trim();

    if (searchValue === "") {
      searchResults.classList.add("hidden");
      blogResults.innerHTML = "";
      userResults.innerHTML = "";
      return;
    }

    searchResults.classList.remove("hidden");
    fetchUsers(searchValue);
    fetchBlogs(searchValue);
  });
</script>
