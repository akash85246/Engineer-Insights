<div
  class="py-2 px-4 sm:px-4 md:px-6 lg:px-8 lg:py-2 <%= user.settings.theme === 'dark' ? 'bg-dark-sixth text-dark-text' : 'bg-secondary ' %> sticky top-0 grid grid-cols-2 sm:block gap-1 sm:gap-2 md:gap-4 md:min-h-screen font-lora"
>
  <img
    src="<%= profile && profile.avatar ? profile.avatar : '/images/defaultProfile.png' %>"
    alt="profile photo"
    class="max-w-45 w-full sm:max-w-full h-40 w-30 sm:h-52 rounded-md shadow-md object-cover"
  />

  <div class="flex flex-col gap-2 md:gap-4 sm:mt-6 p-2 sm:p-0">
    <h1
      class="text-left text-base sm:text-lg md:text-base lg:text-lg font-semibold whitespace-nowrap flex gap-1 items-end <%= profile.settings.theme === 'dark' ? ' text-dark-secondary' : 'text-white' %>"
    >
      <span><%= profile.firstname %></span>
      <span><%= profile.lastname %></span>
      <p
        class="text-xs md:text-xxs lg:text-xs <%= profile.settings.theme === 'dark' ? ' text-dark-tertiary' : 'text-fifth' %>"
      >
        <%= profile.subscription %>
      </p>
      <% if (user._id && (user._id.toString() !== profile._id.toString())) { %>

      <button onclick="openPopout()" class="flex-1 p-0 m-0">...</button>
      <% } %>
    </h1>

    <div class="grid grid-cols-4 w-4/5 m-auto sm:w-full gap-2 md:gap-3">
      <a href="https://github.com/<%= profile.github %>" target="_blank">
        <img
          src="/images/icons/githubIcon.png"
          alt="GitHub"
          class="h-6 w-6 rounded-md hover:scale-105 transition-transform mx-auto <%= profile.settings.theme === 'dark' ? '' : '' %>"
        />
      </a>
      <a href="https://linkedin.com/in/<%= profile.linkedin %>" target="_blank">
        <img
          src="/images/icons/linkedinIcon.png"
          alt="LinkedIn"
          class="h-6 w-6 rounded-md hover:scale-105 transition-transform mx-auto <%= profile.settings.theme === 'dark' ? '' : '' %>"
        />
      </a>
      <a href="https://twitter.com/<%= profile.twitter %>" target="_blank">
        <img
          src="/images/icons/twitterIcon.png"
          alt="Twitter"
          class="h-6 w-6 rounded-md hover:scale-105 transition-transform mx-auto <%= profile.settings.theme === 'dark' ? '' : '' %>"
        />
      </a>
      <a href="mailto:<%= profile.email %>" target="_blank">
        <img
          src="/images/icons/emailIcon.png"
          alt="Email"
          class="h-6 w-6 rounded-md hover:scale-105 transition-transform mx-auto <%= profile.settings.theme === 'dark' ? '' : '' %>"
        />
      </a>
    </div>

    <% if (user._id && (user._id.toString() !== profile._id.toString())) { %>
    <div class="grid grid-cols-1 gap-1">
      <button
        id="followButton"
        class="w-full bg-blue-500 text-white font-bold rounded-md hover:bg-blue-600 outline-none transition-transform hover:scale-105 p-1 sm:py-2 sm:px-4 text-xs sm:text-sm md:text-base font-roboto"
        onclick="toggleFollow( '<%= profile.slug %>')"
      >
        <%= profile.followers.some(followerId => followerId.toString() ===
        profile._id.toString()) ? "Unfollow" : "Follow" %>
      </button>
    </div>

    <% } %>

    <div>
      <!-- <h3 class="text-xs sm:text-sm md:text-base lg:text-lg font-semibold text-white mb-2 hidden sm:block">
        profile's Tags
      </h3> -->
      <% if (Array.isArray(profile.tags) && profile.tags.length > 0) { %>
      <div class="flex flex-wrap gap-2 w-full">
        <% profile.tags.forEach(function(tag) { %>
        <span
          class="inline-block <%= profile.settings.theme === 'dark' ? 'text-dark-secondary border-dark-secondary' : ' border-sixth text-sixth ' %>bg-transparent bg-opacity-35 text-xs md:text-xxs lg:text-xs border sm:border rounded-md sm:rounded-lg px-1 sm:px-2 sm:py-1 hover:scale-105 transition-transform font-roboto uppercase"
        >
          <%= tag.trim() %>
        </span>
        <% }) %>
      </div>
      <% } else { %>
      <p
        class="text-sm sm:text-xs lg:text-sm border-2 bg-dark-secondary border-dark-text text-dark-text rounded-lg p-1"
      >
        No tags available
      </p>
      <% } %>
    </div>

    <div class="sm:pb-5">
      <p
        class="text-xs md:text-xs lg:text-sm <%= profile.settings.theme === 'dark' ? ' text-dark-secondary' : 'text-sixth' %> flex items-center gap-2"
      >
        <img
          src="/images/icons/locationIcon.png"
          alt="Location"
          class="h-3 w-3 sm:h-4 sm:w-4 md:w-5 md:h-5"
        />
        <span><%= profile.country %> - <%= profile.state %></span>
      </p>
    </div>
  </div>

  <div class="col-span-2 w-full">
    <!-- Hidden Content (Shown Only When Button is Clicked) -->
    <div
      id="toggleContent"
      class="hidden md:block transition-all duration-300 ease-in-out mt-2"
    >
      <div
        class="text-xxs md:text-xs lg:text-sm <%= profile.settings.theme === 'dark' ? ' text-dark-secondary border-dark-tertiary' : 'text-fifth border-tertiary' %> border-t-2 pt-4"
      >
        <span id="profileBio" class="break-words"><%= profile.bio %></span>
      </div>

      <div class="sm:pt-2 col-span-2"><%- include("./similarUsers.ejs") %></div>
    </div>

    <!-- Toggle Button (Shown Only on Small Screens) -->
    <button
      id="toggleButton"
      class="md:hidden w-full text-center flex items-center justify-center"
    >
      <img
        src="/images/icons/downArrow.png"
        alt=""
        class="w-5 h-5 <%= profile.settings.theme === 'dark' ? ' invert' : '' %>"
        id="toggleImage"
      />
    </button>
  </div>

  <!-- Popout Modal -->
  <div
    id="popout"
    class="hidden fixed inset-0 bg-black bg-opacity-50  z-[1000]  flex justify-center items-center transition-opacity duration-300"
  >
    <div
      class="relative bg-gray-900 w-11/12 sm:w-3/4 md:w-1/3 lg:w-1/4 rounded-xl p-6 flex flex-col gap-6 shadow-xl border border-gray-700 backdrop-blur-md"
    >
      <!-- Header -->
      <div
        class="flex items-center justify-between border-b border-gray-700 pb-3"
      >
        <h2 class="text-white text-lg font-semibold">Manage User</h2>
        <button
          onclick="closeProfilePopout()"
          class="text-gray-400 hover:text-red-500 transition duration-200 text-2xl font-roboto"
        >
          Ã—
        </button>
      </div>

      
      <p class="text-gray-300 text-sm ">
        If you block this user, you will no longer see any blogs from them.
      </p>

      
      <button
        id="blockButton"
        class="flex items-center justify-center w-full bg-red-500 text-white font-semibold rounded-lg hover:bg-red-600 outline-none transition-all transform hover:scale-105 py-2 px-4 text-sm md:text-base shadow-md font-roboto"
        onclick="blockprofile('<%= profile._id %>')"
      >
        <%= (user.blockedprofiles && profile._id &&
        user.blockedprofiles.some(blockedId => blockedId.toString() ===
        profile._id.toString())) ? "Unblock" : "Block" %>
      </button>
    </div>
  </div>

  <script>
    let startTime = Date.now();

    window.addEventListener("beforeunload", function () {
      let timeSpent = Math.round((Date.now() - startTime) / 1000);

      gtag("event", "profile_time_spent", {
        event_category: "Profile",
        event_label: "<%= profile.username %>",
        time_spent: timeSpent,
      });
    });
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const toggleButton = document.getElementById("toggleButton");
      const toggleContent = document.getElementById("toggleContent");
      const toggleImage = document.getElementById("toggleImage");
      let isOpen = false;

      toggleButton.addEventListener("click", function () {
        isOpen = !isOpen;
        if (isOpen) {
          toggleContent.classList.remove("hidden");
          toggleImage.src = "/images/icons/upArrow.png";
        } else {
          toggleContent.classList.add("hidden");
          toggleImage.src = "/images/icons/downArrow.png";
        }
      });
    });
  </script>
  <script>
    function openPopout() {
      const popout = document.getElementById("popout");
      popout.classList.remove("hidden");
    }

    function closeProfilePopout() {
      const popout = document.getElementById("popout");
      popout.classList.add("hidden");
    }

    function truncateText(text, maxLength) {
      if (text.length > maxLength) {
        return text.substring(0, maxLength) + "...";
      }
      return text;
    }

    const profileBio = document.getElementById("profileBio");

    const bioText = profileBio.innerText;

    const truncatedBio = truncateText(bioText, 500);

    profileBio.innerText = truncatedBio;
    ("<% if(profile){ %>");

    async function toggleFollow(profileSlug) {
      event.preventDefault();
      const followButton = document.getElementById("followButton");
      try {
        const response = await fetch(`/api/user/follow/${profileSlug}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const followButton = document.getElementById("followButton");
          const data = await response.json();

          alert(data.message);

          followButton.innerText =
            followButton.innerText === "Follow" ? "Unfollow" : "Follow";
          if (followButton.innerText === "Follow") {
            gtag("event", "follow_user", {
              event_category: "Profile",
              event_label: "User Followed",
              followed_user_id: "<%= profile._id %>",
              follower_user_id: "<%= user._id %>",
            });
          }
        } else {
          console.error("Error following/unfollowing the profile.");
        }
      } catch (error) {
        console.error("An error occurred:", error);
      }
    }

    async function blockprofile(id) {
      try {
        const response = await fetch(`/api/profile/block/${id}`, {
          method: "PATCH",
        });

        if (response.ok) {
          const data = await response.json();

          alert(data.message);

          const blockButton = document.getElementById("blockButton");

          blockButton.innerText =
            blockButton.innerText === "Block" ? "Unblock" : "Block";
          if (blockButton.innerText === "Block") {
            gtag("event", "block_user", {
              event_category: "Profile",
              event_label: "User Blocked",
              blocked_user_id: "<%= profile._id %>",
              blocker_user_id: "<%= user._id %>",
            });
          }
        } else {
          console.log("Error blocking profile:", response);
        }
      } catch (error) {
        console.log("Error:", error);
      }
    }
    ("<% } %>");
  </script>
</div>
