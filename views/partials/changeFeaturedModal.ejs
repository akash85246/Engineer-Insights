<div
  class="fixed inset-0 <%= user.settings.theme === 'dark' ? 'bg-dark-sixth text-dark-text' : 'text-text bg-primary' %> bg-opacity-50 flex items-center justify-center hidden z-50 p-5 md:p-0 backdrop-blur-sm w-full h-full"
  id="changeFeaturedModal"
>
  <input type="text" id="modalChangeBlogInfoId" hidden />

  <div
    class="<%= user.settings.theme === 'dark' ? 'bg-dark-background text-dark-text' : 'bg-background text-text' %> backdrop-blur-sm p-4 rounded-lg w-full m-auto md:w-1/2 "
  >
       <div class="flex items-center justify-between  col-span-2 mb-2">
      <h2
        class="text-xl font-semibold font-sans"
      >
       Select Blog To Feature
      </h2>
      <button
            onclick="closeShowChangeFeaturedModal()"
            class="text-gray-400 hover:text-red-500 transition duration-200 text-xl"
            aria-label="Close"
          >
            &times;
          </button>
      </div>

    <div
      class="relative flex items-center <%= user.settings.theme === 'dark' ? ' bg-dark-sixth ' : 'bg-gray-200' %> border rounded-lg p-2 md:px-5 md:py-3 w-full sm:w-2/3 lg:w-full mb-2 sm:mb-0"
    >
      <img
        src="images/icons/searchIcon.png"
        alt="Search Icon"
        class="w-4 h-4 md:w-6 md:h-6 <%= user.settings.theme === 'dark' ? ' text-dark-text' : ' text-text' %>"
      />
      <input
        type="text"
        placeholder="Search a blog to select"
        class="mx-5 bg-transparent outline-none <%= user.settings.theme === 'dark' ? ' text-dark-primary placeholder-sixth' : 'text-secondary placeholder-tertiary' %> w-full text-sm md:text-sm lg:text-base font-lora placeholder-sixth"
        oninput="searchBlog(this.value)"
      />
    </div>
    <div id="top-10" class="min-h-[40vh] h-full"></div>
  </div>
</div>

<script>
  const searchList = document.getElementById("top-10");
  const user = "<%= user._id %>";

  async function searchBlog(search) {
    try {
      const response = await fetch(
        `/api/blog/search?search=${encodeURIComponent(
          search
        )}&featured=false&author=${user}`
      );
      if (!response.ok) throw new Error("Failed to search for blogs");

      const data = await response.json();
      searchList.innerHTML = "";

      if (data.blogs && data.blogs.length > 0) {
        data.blogs.forEach((blog) => {
          const blogDiv = document.createElement("div");
          blogDiv.classList.add(
            "flex",
            "items-center",
            "justify-between",
            "py-2",
            "px-4",
            "cursor-pointer"
          );

          console.log(blog._id);
          blogDiv.innerHTML = `
            <p class="break-words max-w-[70%] md:max-w-[90%] whitespace-normal ">${blog.title}</p>
             <button class=" hover:bg-tertiary   hover:text-background <%= user.settings.theme === 'dark' ? 'bg-dark-fourth text-dark-text' : ' text-sixth bg-secondary' %> px-2 py-1 rounded-lg" onclick="selectBlog('${blog._id}')">Select</button>
          `;
          searchList.appendChild(blogDiv);
        });
      } else {
        searchList.innerHTML = "<p class='text-center'>No blogs found</p>";
      }
    } catch (error) {
      console.error("Error fetching blogs:", error);
      alert("Failed to search for blogs");
      searchList.innerHTML = "<p class='text-center'>An error occurred</p>";
    }
  }

  async function selectBlog(currentBlogId) {
  const blogIdInput = document.getElementById("modalChangeBlogInfoId").value;
  console.log(currentBlogId, blogIdInput);

  try {
    const response = await fetch(`/api/payment/changeFeatured`, {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        currentBlogId: currentBlogId, 
        blogId: blogIdInput,    
      }),
    });

    if (!response.ok) {
        console.log(response);
      throw new Error("Failed to update the blog feature");
    }

    const result = await response.json();
    // alert(`Blog updated successfully: ${result.message}`);
    window.location.reload();

  } catch (error) {
    console.error("Error updating blog:", error);
    alert("An error occurred while updating the blog");
  }
}
</script>
