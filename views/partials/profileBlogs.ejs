<h1
  class="text-base font-lora sm:text-lg md:text-xl lg:text-2xl p-3 px-2 md:px-2 lg:px-5 font-semibold flex justify-between items-center <%= user.settings.theme === 'dark' ? 'text-dark-secondary bg-dark-background' : 'text-secondary bg-white bg-background' %> sticky top-0 z-10"
>
  All Blogs
  <span
    id="currentPage"
    class="text-xs sm:text-sm md:text-base lg:text-lg <%= user.settings.theme === 'dark' ? ' text-dark-tertiary' : 'text-tertiary' %>"
  ></span>
</h1>

<div
  class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-1 md:gap-2 px-1 md:px-2 lg:px-5 -z-50"
  id="allBlog"
></div>

<div
  class="flex justify-center space-x-2 my-4 sm:my-6 md:my-8 lg:my-10 overflow-x-scroll relative bottom-0 -z-50"
  id="pagingContainer"
></div>

<%- include("../partials/deleteBlogModal.ejs") %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let currentPage = 1;
    const blogsPerPage = 10;

    function renderBlogs(blogData) {
      const allBlogContainer = document.getElementById("allBlog");

      if (blogData.length === 0) {
        allBlogContainer.innerHTML = `<div class="border-2 border border-gray-300 rounded-lg p-6 text-center                text-gray-500 font-lora font-thin min-h-[400px] flex flex-col -z-50 items-center justify-center shadow-lg">
                  <img
      src="/images/icons/blogNotFound.svg" />
                <p class="text-lg">No blogs yet? Time to share your first insight!</p>
              </div>`;
        return;
      }
      const slidesHtml = blogData
        .map((blog) => {
          let isSubAuthor = false;
          let isAuthor = false;
          let userId = null;
          const isAuthenticated = "<%- isAuthenticated %>" == "true";
          
          if (isAuthenticated) {
            const userId = "<%- user._id %>"; 
            console.log("userId", userId);
            isAuthor = userId.toString() == blog.author._id;
            isSubAuthor = JSON.stringify(
              blog.subauthors.some(
                (subauthorId) => subauthorId.toString() === userId.toString()
              )
            );
          }
          

          return `
        <div class="w-full flex-shrink-0  " id="blog-${
          blog.slug
        }" onmouseleave="hideBlogOptions('${blog.slug}')">
          <div class="flex justify-center items-center bg-no-repeat bg-cover text-white rounded-md h-full" style="background-image: url('${
            blog.blogPhoto
          }')">
            <div class="rounded-lg shadow-lg overflow-hidden w-full <%= user.settings.theme === 'dark' ? 'bg-dark-sixth' : 'bg-background' %> bg-opacity-10 p-2 sm:p-3 h-full flex flex-col justify-between">
              <div class="flex justify-end">
                <p class="p-1 sm:px-2 sm:py-1 rounded-lg <%= user.settings.theme === 'dark' ? 'bg-dark-sixth' : 'bg-background' %> shadow-lg bg-opacity-30 text-white text-xxs sm:text-xs md:text-xxs lg:text-xs font-semibold font-roboto uppercase">
                   ${truncateText(blog.tags[0], 10)}</p>
              </div>
              <div class="flex flex-col gap-2">
                <div class="h-10 sm:h-20 md:h-18 lg:h-28"></div>
                <p class="text-xs font-lora <%= user.settings.theme === 'dark' ? 'text-dark-secondary' : 'text-sixth' %>">${new Date(
                  blog.createdAt
                ).toLocaleDateString("en-US", {
                  day: "numeric",
                  month: "numeric",
                  year: "numeric",
                })}</p>
                <h5 class="text-sm sm:text-sm md:text-base lg:text-lg font-semibold text-background break-words whitespace-normal font-lora">${truncateText(
                  blog.title,
                  50
                )}</h5>
                <p class="text-xs sm:text-xxs md:text-xs lg:text-sm <%= user.settings.theme === 'dark' ? 'text-dark-primary' : 'text-background' %> break-words whitespace-normal">${truncateText(
                  blog.description,
                  100
                )}
                <span><a href="/blog/${
                  blog.slug
                }" class="<%= user.settings.theme === 'dark' ? 'text-dark-primary' : 'text-background' %> hover:text-highlight font-roboto text-center  font-medium">read more</a></span>
                </p>
                <div class="flex justify-between items-center">
                 <div class="flex items-center gap-2 font-roboto cursor-default">
                    <div class="flex items-center gap-1">
                      <img src="images/icons/likeIcon.svg" class=" h-3 w-3 md:h-5 md:w-5" />
                      <span class="text-xxxs sm:text-xxs md:text-xs lg:text-sm ">
                          ${blog.likes.length}
                      </span>
                    </div>
                    <div class="flex items-center gap-1">
                      <img src="images/icons/viewIcon.svg" class=" h-6 w-6 md:h-8 md:w-8 " />
                      <span class="text-xxxs sm:text-xxs md:text-xs lg:text-sm ">
                          ${blog.views.length}
                      </span>
                    </div>
                  </div>
                  <div class ="relative">
                    ${(isAuthenticated)?
                  `<button onclick='openBlogMore(${isSubAuthor}, ${isAuthor}, "${
            blog.slug
          }")'>
                      <img src="images/icons/verticalMoreIcon.svg" alt="More"
                        class="w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 lg:w-7 lg:h-7">
                    </button>`:""}
                  ${
                    isSubAuthor || isAuthor
                      ? `
                      <div  class="absolute bottom-10 right-0 flex flex-col gap-2 rounded-md p-2 shadow-md z-50
    <%= user.settings.theme === 'dark' ? 'bg-dark-fifth text-dark-text' : 'bg-fifth text-primary' %> min-w-[120px] hidden"
  id="blogMoreOptions-${blog.slug}">
                         ${
                           isAuthor
                             ? `
                             <button onclick="openDeleteModal('${blog.slug}')"  class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
      <%= user.settings.theme === 'dark'
        ? 'hover:bg-red-600 text-dark-primary'
        : 'hover:bg-red-200 text-primary' %>">
                              <img src="images/icons/deleteDarkIcon.svg" alt="Delete Blog"
                        class="w-4 h-4 transition-transform duration-200 group-hover:scale-110 ">
                              <span>Delete</span>
                              </button>
                             `
                             : ""
                         }
                         <a href="/blog/edit/${
                           blog.slug
                         }"  class="flex items-center justify-start gap-2 px-3 py-2 rounded-md text-sm transition-all
      <%= user.settings.theme === 'dark'
        ? 'hover:bg-blue-600 text-dark-primary'
        : 'hover:bg-blue-200 text-primary' %>"> <img src="images/icons/editDarkIcon.svg" alt="Edit Blog"
                        class="w-4 h-4 transition-transform duration-200 group-hover:scale-110"> 
                         <span>Edit</span>
                         </a>
                      </div>
                    `
                      : ""
                  }
                </div>
              </div>
              </div>
               </div>
            </div>
          </div>
        </div>
      `;
        })
        .join("");

      allBlogContainer.innerHTML = slidesHtml;

      document.getElementById("currentPage").innerText = `Page ${currentPage}`;
    }

    window.openBlogMore = function openBlogMore(isSubAuthor, isAuthor, slug) {
      const blogMoreOptions = document.getElementById(
        "blogMoreOptions-" + slug
      );
     
      blogMoreOptions.classList.toggle("hidden");
    };

    window.hideBlogOptions = function hideBlogOptions(slug) {
      const options = document.getElementById(`blogMoreOptions-${slug}`);
      if (options) {
        options.classList.add("hidden");
      }
    };

    function setupPagination(totalPages, currentPage) {
      const paginationElement = document.getElementById("pagingContainer");
      paginationElement.innerHTML = "";
      const maxVisiblePages = 5;
      let startPage = Math.max(
        currentPage - Math.floor(maxVisiblePages / 2),
        1
      );
      let endPage = startPage + maxVisiblePages - 1;

      if (endPage > totalPages) {
        endPage = totalPages;
        startPage = Math.max(endPage - maxVisiblePages + 1, 1);
      }

      if (totalPages < 1) {
        const displayBlogsElement = document.getElementById("displayBlogs");
        const noBlogCard = `
      <div class="border-2 border border-gray-300 rounded-lg p-6 text-center                text-gray-500 font-lora font-thin min-h-[400px] flex flex-col               items-center justify-center shadow-lg">
                  <img
      src="/images/icons/blogNotFound.svg" class="" />
                <p class="text-lg">No blogs yetâ€”be the pioneer!</p>
              </div>
            `.trim();
        displayBlogsElement.innerHTML += noBlogCard;
        return;
      }

      const prevButton = document.createElement("button");
      prevButton.innerText = "Prev";
      prevButton.classList.add(
        "px-3",
        "py-1",
        "ml-2",
        "bg-fourth",
        "rounded-md",
        "text-secondary",
        "hover:bg-fifth",
        "hover:text-fourth"
      );

      prevButton.disabled = currentPage === 1;
      prevButton.addEventListener("click", () => fetchBlogs(currentPage - 1));
      paginationElement.appendChild(prevButton);

      for (let i = startPage; i <= endPage; i++) {
        const pageButton = document.createElement("button");
        pageButton.innerText = i;
        pageButton.classList.add(
          "px-3",
          "py-1",
          "mx-1",
          i === currentPage ? "bg-secondary" : "bg-fourth",
          i === currentPage ? "text-background" : "text-secondary",
          "rounded-md"
        );
        if (i === currentPage) {
          pageButton.classList.add("bg-secondary", "text-white");
        } else {
          pageButton.classList.add("hover:bg-fifth", "hover:text-fourth");
        }
        pageButton.onclick = () =>{
           fetchBlogs(i)};
        paginationElement.appendChild(pageButton);
      }
      const nextButton = document.createElement("button");
      nextButton.innerText = "Next";
      nextButton.classList.add(
        "px-3",
        "py-1",
        "ml-2",
        "bg-fourth",
        "rounded-md",
        "text-secondary",
        "hover:bg-fifth",
        "hover:text-fourth"
      );
      // nextButton.disabled = currentPage === totalPages;
      nextButton.addEventListener("click", () => {
        console.log("I am cklicked");
        fetchBlogs(currentPage + 1);
      });
      paginationElement.appendChild(nextButton);
      if (currentPage == 1) {
        prevButton.style.display = "none";
      }
      if (currentPage >= totalPages) {
        nextButton.style.display = "none";
      }
    }

    

    async function fetchBlogs(page) {
      const apiURL = `/api/blog/search?author=<%= profile._id %>&page=${page} &limit=${blogsPerPage}`;

      try {
        const response = await fetch(apiURL);
        const data = await response.json();
        renderBlogs(data.blogs);
        const currentPage = page;
        setupPagination(data.pagination.totalPages, currentPage);
        const currentPageElement = document.getElementById("currentPage");
        currentPageElement.innerText = `Page ${currentPage}`;
      } catch (error) {
        return;
        console.error("Error fetching blogs:", error);
      }
    }

    function truncateText(text, maxLength) {
      if (text.length > maxLength) {
        return text.substring(0, maxLength) + "...";
      }
      return text;
    }

    fetchBlogs(1);
  });
</script>
